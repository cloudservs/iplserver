<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/oxm 
						http://www.springframework.org/schema/oxm/spring-oxm.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/jdbc 
                        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                        http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="com.cloudserv" />
	<mvc:annotation-driven />

	<!-- Configure to plugin JSON as request and response in method handler -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

	<!-- <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper"></bean> -->
	<bean id="gson" class="com.google.gson.Gson"></bean>

	<!-- Configuration for Mongo DB connection -->
	<bean id="serverAddress" class="com.mongodb.ServerAddress">
		<constructor-arg value="${database.host}" />
		<constructor-arg value="${database.port}" />
	</bean>
	<bean id="passwordHandler" class="com.cloudserv.claims.sec.PasswordHandler">
		<constructor-arg name="key" value="tonic@2019.v123"/>
		<constructor-arg name="encryptedPassword" value="${database.password}"/>
	</bean>
	<bean id="creds" class="com.mongodb.MongoCredential" factory-method="createCredential">
		<constructor-arg value="${database.user}" />
		<constructor-arg value="${database.name}" />
		<constructor-arg name="password">
			<bean factory-bean="passwordHandler" factory-method="handlePassword" />
		</constructor-arg>
	</bean>
	<bean id="mongo" class="com.mongodb.MongoClient">
		<constructor-arg ref="serverAddress" />
		<constructor-arg name="credentialsList">
			<list>
				<ref bean="creds" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="datastore" factory-bean="morphia" factory-method="createDatastore">
		<constructor-arg ref="mongo" />
		<constructor-arg value="${database.name}" />
	</bean>

	<bean id="morphia" class="org.mongodb.morphia.Morphia">
		<constructor-arg name="classesToMap">
			<util:set set-class="java.util.HashSet">
				<value>com.cloudserv.claims.models.User</value>
			</util:set>
		</constructor-arg>
	</bean>


</beans>